{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onSelect","className","map","todo","id","completed","title","classNames","type","onClick","TodoFilter","query","filterType","setQuery","setFilterType","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closeModal","useState","Boolean","loading","setLoading","user","setUser","useEffect","userId","foundUser","href","email","name","App","setTodos","setSelectedTodo","todosFromServer","todoList","todoId","find","cleanQuery","trim","toLowerCase","filter","includes","filterTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.068cffda.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[];\n  selectedTodo: number;\n  onSelect: (todoId: number) => void;\n}\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  selectedTodo,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          id,\n          completed,\n          title,\n        } = todo;\n\n        return (\n          <tr\n            key={id}\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': selectedTodo === id },\n            )}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                { 'has-text-success': completed },\n                { 'has-text-danger': !completed },\n              )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(id)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    { 'fa-eye': selectedTodo !== id },\n                    { 'fa-eye-slash': selectedTodo === id },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","interface TodoFilterProps {\n  query: string;\n  filterType: string;\n  setQuery: (value: string) => void;\n  setFilterType: (value: string) => void;\n}\n\nexport const TodoFilter:React.FC<TodoFilterProps> = ({\n  query,\n  filterType,\n  setQuery,\n  setFilterType,\n} : TodoFilterProps) => {\n  const clearQuery = () => setQuery('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterType}\n            onChange={(event => setFilterType(event.target.value))}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query\n            && (\n              <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  data-cy=\"clearSearchButton\"\n                  type=\"button\"\n                  className=\"delete\"\n                  onClick={clearQuery}\n                />\n              </span>\n            )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoModalProps {\n  todo: Todo;\n  closeModal: () => void;\n}\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  todo,\n  closeModal,\n}: TodoModalProps) => {\n  const [loading, setLoading] = useState(Boolean);\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(todo?.userId || 0)\n      .then(foundUser => {\n        setUser(foundUser);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-danger\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | []>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filterType, setFilterType] = useState('all');\n\n  const selectTodo = (todoId: number) => {\n    setSelectedTodo(todos.find(todo => todo.id === todoId) || null);\n  };\n\n  const closeModal = () => setSelectedTodo(null);\n\n  const filterTodos = () => {\n    const cleanQuery = query.trim().toLowerCase();\n\n    return todos.filter(todo => {\n      switch (filterType) {\n        case 'active':\n          return !todo.completed && todo.title.toLowerCase().includes(cleanQuery);\n        case 'completed':\n          return todo.completed && todo.title.toLowerCase().includes(cleanQuery);\n        default:\n          return todo.title.toLowerCase().includes(cleanQuery);\n      }\n    });\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      });\n  }, []);\n\n  const todoList = (\n    <TodoList\n      selectedTodo={selectedTodo?.id || 0}\n      onSelect={selectTodo}\n      todos={filterTodos()}\n    />\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filterType={filterType}\n                setQuery={setQuery}\n                setFilterType={setFilterType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length\n                  ? todoList\n                  : <Loader />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}